name: Biglinux Build XIVA
on:
  workflow_dispatch:
  schedule:
    - cron:  '* 4 * * 5'

  repository_dispatch:
    types:
      - webhook
      - '**'
    
jobs:
  prepare-release:
    runs-on: ubuntu-20.04
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDDHHmm'
    outputs:
      release_tag: ${{ steps.time.outputs.time }}
      
  build-release:
    runs-on: ubuntu-20.04
    needs: [prepare-release]
    strategy:
      matrix:
        EDITION: [xivastudio]
        BRANCH: [stable]
        SCOPE: [full]
        KERNEL: [515-rt]
        
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
          
      - id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YY.MM.DD'
          
      - name: Build and Upload
        uses: BigLinux-Package-Build/build-iso@main
        with:
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          scope: ${{ matrix.scope }}
          version: ${{ steps.time.outputs.time }}
          kernel: ${{ matrix.kernel }}
          code-name: "Ruah"
          iso-profiles-repo: 'https://github.com/biglinux/iso-profiles'
          release-tag: ${{ needs.prepare-release.outputs.release_tag }}
      
      - name: Prepare Files to Upload
        shell: bash
        run: |
          ls -lh
          mkdir iso
          for i in *.iso *.torrent *.pkgs *.md5; do
          cp $i iso/
          done
      
      - name: Push to Repo SourceForge
        shell: bash
        run: |
          echo "## ssh setup"
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/id_ed25519
          chmod 600 /home/runner/.ssh/id_ed25519
          echo "${{ secrets.XIVASTUDIO_SOURCEFORGE_KEY }}" >> /home/runner/.ssh/id_ed25519
          ssh-keyscan -t ed25519 ${{ secrets.XIVASTUDIO_SOURCEFORGE_HOST }} >> /home/runner/.ssh/known_hosts
          
          ssh xivastudio@shell.sourceforge.net create
          rsync -CavzpP --progress --rsh=ssh iso/ ${{ secrets.XIVASTUDIO_SOURCEFORGE_USER }}@${{ secrets.XIVASTUDIO_SOURCEFORGE_HOST }}:${{ secrets.XIVASTUDIO_SOURCEFORGE_ISO_DIR }}

      - name: Upload OSDN
        shell: bash -O extglob {0}
        run: |
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          echo "${{ secrets.XIVASTUDIO_OSDN_KEY }}" > /home/runner/.ssh/id_rsa
          ssh-keyscan -t rsa storage.osdn.net >> /home/runner/.ssh/known_hosts
        
          rsync -CavzpP --progress iso/ ${{ secrets.XIVASTUDIO_OSDN_USER }}@${{ secrets.XIVASTUDIO_OSDN_HOST }}:${{ secrets.XIVASTUDIO_OSDN_DIR }}
      
      ## Tmate ##
      #- name: Setup TMATE Session
        #uses: mxschmitt/action-tmate@v3

      - name: Telegram Alert Success
        shell: bash
        run: |
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ISO: ${{ github.workflow }} Criada com Sucesso.", "disable_notification": true}' ${{ secrets.MESSAGE_BOT_KEY }}
          
      - name: Telegram Alerta Fail
        if: ${{ failure() || cancelled() }}
        run: |
          #echo ${{ github.token }} | gh auth login --with-token
          #gh release delete ${{ needs.prepare-release.outputs.release_tag }} -y --repo ${{ github.repository }}
          
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "Falha ao gerar ISO  ${{ github.workflow }} link https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "disable_notification": false}' ${{ secrets.MESSAGE_BOT_KEY }}
          
          
