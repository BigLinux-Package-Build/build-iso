name: 01 Biglinux Build ISO XIVAStudio
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'With TMATE'
        required: false
        default: false
        
  schedule:
    - cron:  '0 0 * * 4'

  repository_dispatch:
    types:
      - webhook
      - '**'
    
jobs:
  prepare-release:
    runs-on: ubuntu-20.04
    steps:
      - id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYY-MM-DD_HH-mm'
    outputs:
      release_tag: ${{ steps.time.outputs.time }}
      
  build-release:
    runs-on: ubuntu-20.04
    needs: [prepare-release]
    strategy:
      fail-fast: false
      matrix:
        EDITION: [xivastudio]
        MANJAROBRANCH: [stable]
        BIGBRANCH: [stable]
        # KERNEL: [510, 515, 519]
        KERNEL: [oldLts, atualLts, xanmod]
        #latest
    steps:
      - name: Build and Upload
        uses: BigLinux-Package-Build/build-iso@main
        with:
          edition: ${{ matrix.edition }}
          manjarobranch: ${{ matrix.manjarobranch }}
          bigbranch: ${{ matrix.bigbranch }}
          kernel: ${{ matrix.kernel }}
          extrarepo: ${{ matrix.extrarepo }}
          iso-profiles-repo: 'https://github.com/biglinux/iso-profiles'
          release-tag: ${{ needs.prepare-release.outputs.release_tag }}
          tmate: ${{ inputs.debug_enabled }}
          repo-mirror: ${{ secrets.REPO_MIRROR }}
          repo-dev: ${{ secrets.REPO_DEV }}
      
      - name: Prepare Files to Upload
        shell: bash -O extglob {0}
        run: |
          ls -lh
          mkdir iso
          for i in *.iso *.torrent *.pkgs *.md5; do
          cp $i iso/
          done
          
      # - name: Prepare and Push to CDN77
      #   shell: bash -O extglob {0}
      #   run: |
      #     ssh-keyscan -t ecdsa ${{ secrets.CDN77_HOST }} >> /home/runner/.ssh/known_hosts
      #     sshpass -p "${{ secrets.CDN77_KEY }}" rsync -Ccravp --progress iso/ ${{ secrets.CDN77_USER }}@${{ secrets.CDN77_HOST }}:${{ secrets.CDN77_ISO_DIR }}
      
      - name: Push to Repo
        shell: bash -O extglob {0}
        run: |
          echo "## ssh setup"
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          echo "${{ secrets.PKGBUILD_KEY }}" > /home/runner/.ssh/github_actions
          eval `ssh-agent -s`
          ssh-add /home/runner/.ssh/github_actions
          ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} ${{ secrets.PKGBUILD_HOST }} >> /home/runner/.ssh/known_hosts
          ip=$(ssh ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }} -p ${{ secrets.PKGBUILD_PORT }} 'echo $(curl -s ident.me) | tail -n1')
          ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} $ip >> /home/runner/.ssh/known_hosts
          
          #push files
          for i in *.iso *.torrent *.pkgs *.md5; do
          test -e $i && rsync -vaPpz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@$ip:${{ secrets.NIMBUS_DIR }}
          done
      
      # - name: Upload OSDN
      #   shell: bash -O extglob {0}
      #   run: |
      #     mkdir -p /home/runner/.ssh
      #     touch /home/runner/.ssh/id_rsa
      #     chmod 600 /home/runner/.ssh/id_rsa
      #     echo "${{ secrets.XIVASTUDIO_OSDN_KEY }}" > /home/runner/.ssh/id_rsa
      #     ssh-keyscan -t rsa storage.osdn.net >> /home/runner/.ssh/known_hosts
      #     rsync -CavzpP --progress iso/ ${{ secrets.XIVASTUDIO_OSDN_USER }}@${{ secrets.XIVASTUDIO_OSDN_HOST }}:${{ secrets.XIVASTUDIO_OSDN_DIR }}
      
#       - name: Push to Repo SourceForge
#         shell: bash -O extglob {0}
#         run: |
#           echo "## ssh setup"
#           mkdir -p /home/runner/.ssh
#           touch /home/runner/.ssh/id_ed25519
#           chmod 600 /home/runner/.ssh/id_ed25519
#           echo "${{ secrets.XIVASTUDIO_SOURCEFORGE_KEY }}" >> /home/runner/.ssh/id_ed25519
#           ssh-keyscan -t ed25519 ${{ secrets.XIVASTUDIO_SOURCEFORGE_HOST }} >> /home/runner/.ssh/known_hosts
#           
#           ssh xivastudio@shell.sourceforge.net create
#           rsync -CavzpP --progress --rsh=ssh iso/ ${{ secrets.XIVASTUDIO_SOURCEFORGE_USER }}@${{ secrets.XIVASTUDIO_SOURCEFORGE_HOST }}:${{ secrets.XIVASTUDIO_SOURCEFORGE_ISO_DIR }}
          
      # Tmate ##
      - name: Setup TMATE Session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}

      - name: Telegram Alert Success
        shell: bash
        run: |
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ðŸ’¿ ISO: ${{ github.workflow }} Criada com Sucesso.", "disable_notification": true}' ${{ secrets.MESSAGE_BOT_KEY }}
          
      - name: Telegram Alerta Fail
        if: ${{ failure() }}
        run: |
          #echo ${{ github.token }} | gh auth login --with-token
          #gh release delete ${{ needs.prepare-release.outputs.release_tag }} -y --repo ${{ github.repository }}
          
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ðŸš¨ Falha ao gerar ISO  ${{ github.workflow }} link https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "disable_notification": false}' ${{ secrets.MESSAGE_BOT_KEY }}
          
          
