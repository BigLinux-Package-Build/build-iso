name: Biglinux Build ISO 5.10 AMBER
on:
  workflow_dispatch:
  #schedule:
    - cron:  '30 2 * * 5'

jobs:
  prepare-release:
    runs-on: ubuntu-20.04
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
      - id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDDHHmm'
    outputs:
      release_tag: ${{ steps.time.outputs.time }}
      
  build-release:
    runs-on: ubuntu-20.04
    needs: [prepare-release]
    strategy:
      matrix:
        EDITION: [biglinux]
        #BRANCH: [stable]
        #SCOPE: [full]
        #EDITION: [kde]
        BRANCH: [stable]
        SCOPE: [full]
        
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}
          
      - id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YY.MM.DD'
          
      - name: Build and Upload
        uses: BigLinux-Package-Build/build-iso@main
        with:
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          scope: ${{ matrix.scope }}
          version: ${{ steps.time.outputs.time }}
          kernel: linux510
          amber: amber
          code-name: "Ruah"
          iso-profiles-repo: 'https://github.com/gitbarnabedikartola/iso-profiles'
          release-tag: ${{ needs.prepare-release.outputs.release_tag }}
      
      #- name: Prepare Upload
        #shell: bash
        #run: |
          #echo "## ssh setup"
          #mkdir -p /home/runner/.ssh
          #touch /home/runner/.ssh/github_actions
          #chmod 600 /home/runner/.ssh/github_actions
          ##ssh-agent -a /tmp/ssh_agent.sock > /dev/null
      
      #- name: Push to Repo
        #shell: bash
        #run: |
          #echo "${{ secrets.PKGBUILD_KEY }}" >> /home/runner/.ssh/github_actions
          #eval `ssh-agent -s`
          #ssh-add /home/runner/.ssh/github_actions
          #ssh-keyscan -t rsa -p ${{ secrets.PKGBUILD_PORT }} ${{ secrets.PKGBUILD_HOST }} >> /home/runner/.ssh/known_hosts
          #ls -lh
          #for i in *.iso *.md5 *.sha1 *.sha256 *.sha512 *.torrent; do
          #test -e $i && rsync -vaPpz -e "ssh -p ${{ secrets.PKGBUILD_PORT }}" $i ${{ secrets.PKGBUILD_USER }}@${{ secrets.PKGBUILD_HOST }}:${{ secrets.BUILD_ISO_DIR }}
          #done
          #exit 0
      
      ### Tmate ##
      #- name: Setup TMATE Session
        #uses: mxschmitt/action-tmate@v3
        #echo $GITHUB_REPOSITORY > github_repository
        #echo $GITHUB_RUN_ID github_id
          
      - name: Telegram Alert Success
        shell: bash
        run: |
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ISO Criada com Sucesso.", "disable_notification": true}' ${{ secrets.MESSAGE_BOT_KEY }}
          
      - name: Telegram Alerta Fail
        if: ${{ failure() || cancelled() }}
        run: |
          #echo ${{ github.token }} | gh auth login --with-token
          #gh release delete ${{ needs.prepare-release.outputs.release_tag }} -y --repo ${{ github.repository }}
          
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "Falha ao gerar a ISO. link do erro: https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID", "disable_notification": true}' ${{ secrets.MESSAGE_BOT_KEY }}
          
          
